name: Create Release

on:
  push:
    tags:
      - 'v*'  # Τρέχει όταν δημιουργηθεί tag που αρχίζει με 'v' (π.χ. v1.0.0)

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch full history for changelog generation
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run tests
      run: |
        python -m pytest tests/ -v || echo "Tests completed (some may be skipped in CI)"
        
    - name: Extract version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      
    - name: Generate changelog
      id: changelog
      run: |
        # Δημιουργία changelog από commits μετά το τελευταίο tag
        PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD~1 2>/dev/null || echo "")
        if [ -n "$PREVIOUS_TAG" ]; then
          CHANGELOG=$(git log --pretty=format:"- %s" ${PREVIOUS_TAG}..HEAD)
        else
          CHANGELOG=$(git log --pretty=format:"- %s" HEAD)
        fi
        
        # Αποθήκευση changelog σε αρχείο
        echo "## Αλλαγές σε αυτή την έκδοση" > CHANGELOG.md
        echo "" >> CHANGELOG.md
        echo "$CHANGELOG" >> CHANGELOG.md
        echo "" >> CHANGELOG.md
        echo "## Εγκατάσταση" >> CHANGELOG.md
        echo "" >> CHANGELOG.md
        echo "1. Κατεβάστε τον πηγαίο κώδικα" >> CHANGELOG.md
        echo "2. Εγκαταστήστε τις εξαρτήσεις: \`pip install -r requirements.txt\`" >> CHANGELOG.md
        echo "3. Εκτελέστε την εφαρμογή: \`python eeg_gui_app.py\`" >> CHANGELOG.md
        echo "" >> CHANGELOG.md
        echo "## Συστήματα" >> CHANGELOG.md
        echo "" >> CHANGELOG.md
        echo "- Windows 10/11" >> CHANGELOG.md
        echo "- macOS 10.15+" >> CHANGELOG.md
        echo "- Linux (Ubuntu, CentOS)" >> CHANGELOG.md
        echo "" >> CHANGELOG.md
        echo "## Απαιτήσεις" >> CHANGELOG.md
        echo "" >> CHANGELOG.md
        echo "- Python 3.8+" >> CHANGELOG.md
        echo "- Δείτε το \`requirements.txt\` για λεπτομερείς εξαρτήσεις" >> CHANGELOG.md
        
    - name: Create source distribution
      run: |
        # Δημιουργία zip αρχείου με τον πηγαίο κώδικα
        zip -r katharsis-v${{ steps.get_version.outputs.VERSION }}-source.zip . \
          -x "*.git*" "*/__pycache__/*" "*.pyc" "*/.pytest_cache/*" \
             "*/node_modules/*" "*.DS_Store" "*/.vscode/*" "*/.idea/*"
             
    - name: Create portable package
      run: |
        # Δημιουργία φακέλου για portable έκδοση
        mkdir -p portable/katharsis
        
        # Αντιγραφή αρχείων εφαρμογής
        cp -r backend components tests *.py *.md requirements.txt portable/katharsis/
        
        # Δημιουργία startup script για Windows
        cat > portable/katharsis/start_katharsis.bat << 'EOF'
        @echo off
        echo Starting Katharsis EEG Artifact Cleaner...
        python eeg_gui_app.py
        pause
        EOF
        
        # Δημιουργία startup script για Linux/Mac
        cat > portable/katharsis/start_katharsis.sh << 'EOF'
        #!/bin/bash
        echo "Starting Katharsis EEG Artifact Cleaner..."
        python3 eeg_gui_app.py
        EOF
        chmod +x portable/katharsis/start_katharsis.sh
        
        # Δημιουργία README για την portable έκδοση
        cat > portable/katharsis/PORTABLE_README.md << 'EOF'
        # Katharsis EEG Artifact Cleaner - Portable Edition
        
        ## Quick Start
        
        1. Βεβαιωθείτε ότι έχετε εγκατεστημένη την Python 3.8+
        2. Ανοίξτε terminal/command prompt σε αυτόν τον φάκελο
        3. Εκτελέστε: `pip install -r requirements.txt`
        4. Για Windows: Double-click το `start_katharsis.bat`
        5. Για Linux/Mac: Εκτελέστε `./start_katharsis.sh`
        
        ## Manual Start
        
        ```bash
        python eeg_gui_app.py
        ```
        
        Για περισσότερες πληροφορίες, δείτε το κυρίως README.md
        EOF
        
        # Δημιουργία zip για portable έκδοση
        cd portable
        zip -r ../katharsis-v${{ steps.get_version.outputs.VERSION }}-portable.zip katharsis/
        cd ..
        
    - name: Create Release
      uses: actions/create-release@v1
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Katharsis v${{ steps.get_version.outputs.VERSION }}
        body_path: CHANGELOG.md
        draft: false
        prerelease: false
        
    - name: Upload Source Archive
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./katharsis-v${{ steps.get_version.outputs.VERSION }}-source.zip
        asset_name: katharsis-v${{ steps.get_version.outputs.VERSION }}-source.zip
        asset_content_type: application/zip
        
    - name: Upload Portable Package
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./katharsis-v${{ steps.get_version.outputs.VERSION }}-portable.zip
        asset_name: katharsis-v${{ steps.get_version.outputs.VERSION }}-portable.zip
        asset_content_type: application/zip

  update-github-pages:
    runs-on: ubuntu-latest
    needs: create-release
    permissions:
      contents: read
      pages: write
      id-token: write
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Pages
      uses: actions/configure-pages@v3
      
    - name: Upload pages artifact
      uses: actions/upload-pages-artifact@v2
      with:
        path: './docs'
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v2
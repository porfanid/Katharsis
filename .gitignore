# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
.hypothesis/
.pytest_cache/
.ruff_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# celery beat schedule file
celerybeat-schedule

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is generally recommended to exclude all other files unless they are
#  specifically needed for the project.
.idea/

# Original project specific
sample_data/

# Test data files
test_*.edf

# === EXTENDED GITIGNORE FOR PROJECT SECURITY ===

# Temporary files
*.tmp
*.temp
*.swp
*.swo
*~
.DS_Store
Thumbs.db

# IDE and Editor files
.vscode/
.sublime-project
.sublime-workspace
*.code-workspace

# OS generated files
ehthumbs.db
Desktop.ini
$RECYCLE.BIN/

# Data files that shouldn't be committed
*.edf
*.bdf
*.gdf
*.fif
*.set
*.vhdr
*.vmrk
*.eeg
data/
recordings/
raw_data/
cleaned_data/
output/
results/

# Large files and media
*.avi
*.mp4
*.mov
*.wav
*.flac
*.png
*.jpg
*.jpeg
*.gif
*.tiff
*.bmp
*.svg
# Exclude our documentation images
!docs/*.png
!docs/*.jpg
!docs/*.jpeg
!*.png
!*.jpg
!*.jpeg

# Configuration files with sensitive data
config.ini
settings.cfg
*.conf
secret.key
.secrets/

# Backup files
*.bak
*.backup
*.old

# Cache directories
.cache/
.npm/
.yarn/
node_modules/

# Documentation build artifacts
docs/_build/
docs/build/
_build/
site/

# Profiling and performance data
*.prof
*.lprof
profile_*.txt
memory_*.txt

# Application specific temporary files
artifact_cleaning_*.png
ica_components_*.png
comparison_*.png
stats_*.txt
session_*.log

# User-specific files
user_settings.json
user_config.py
personal_*.py

# Development and debug files
debug.log
debug_*.py
test_script.py
scratch.py
temp_*.py

# Package manager lock files (uncomment if you want to exclude them)
# poetry.lock
# Pipfile.lock
# conda-environment.yml

# Virtual environment directories
katharsis_env/
.katharsis/

# Jupyter notebook checkpoints and outputs
*.ipynb
.jupyter/

# Documentation generated files
*.pdf
documentation.html

# CI/CD temporary files
.github/workflows/temp_*
.github/temp/

# Security scanning results
security_scan_*.txt
bandit_results.txt
safety_results.txt

# Performance benchmarks
benchmark_*.json
performance_*.log

